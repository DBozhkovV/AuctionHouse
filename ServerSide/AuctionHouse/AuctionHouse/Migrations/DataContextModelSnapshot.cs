// <auto-generated />
using System;
using AuctionHouse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AuctionHouse.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AuctionHouse.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorUserId")
                        .HasColumnType("uuid");

                    b.Property<float>("Bid")
                        .HasColumnType("real");

                    b.Property<float>("BoughtFor")
                        .HasColumnType("real");

                    b.Property<Guid?>("BoughtUserId")
                        .HasColumnType("uuid");

                    b.Property<float>("BuyPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndBidDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartingBidDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("StartingPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AuthorUserId");

                    b.HasIndex("BoughtUserId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("AuctionHouse.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Money")
                        .HasColumnType("real");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AuctionHouse.Models.Item", b =>
                {
                    b.HasOne("AuctionHouse.Models.User", "Author")
                        .WithMany("AuthoredItems")
                        .HasForeignKey("AuthorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuctionHouse.Models.User", "Bought")
                        .WithMany("BoughtItems")
                        .HasForeignKey("BoughtUserId");

                    b.Navigation("Author");

                    b.Navigation("Bought");
                });

            modelBuilder.Entity("AuctionHouse.Models.User", b =>
                {
                    b.Navigation("AuthoredItems");

                    b.Navigation("BoughtItems");
                });
#pragma warning restore 612, 618
        }
    }
}
